{"version":3,"sources":["themes/default.js","components/InteractionLayer/InteractionLayer.css.js","components/InteractionLayer/index.jsx","components/Page/Page.css.js","components/Page/index.jsx","components/Title/Title.css.js","App.css.js","App.jsx","index.js"],"names":["themes_default","primary","secondary","InteractionLayerContainer","styled","div","_templateObject","InteractionLayerWordWrapper","span","_templateObject2","InteractionLayerSpace","_templateObject3","parserOptions","replace","domNode","next","type","domToReact","console","log","children","length","data","mapWords","split","map","word","react_default","a","createElement","Fragment","InteractionLayer","_ref","html","parseHtml","PageContainer","Page_css_templateObject","Page","editorValue","_useState","useState","_useState2","Object","slicedToArray","setEditorValue","value","onChange","e","target","useEditorValue","contentEditable","useRef","Page_css","react_contenteditable_default","innerRef","className","spellcheck","components_InteractionLayer","Title","h1","Title_css_templateObject","AppContainer","App_css_templateObject","props","theme","App","styled_components_browser_esm","App_css","Title_css","components_Page","ReactDOM","render","src_App","document","getElementById"],"mappings":"kOAAeA,EAAA,CACbC,QAAS,aACTC,UAAW,wjBCAb,IAAMC,EAA4BC,IAAOC,IAAVC,KAUzBC,EAA8BH,IAAOI,KAAVC,KAa3BC,EAAwBN,IAAOI,KAAVG,qBCJrBC,EAAgB,CACpBC,QAAS,SAACC,GACR,GAAIA,EAAQC,KACV,OAAID,EAAQE,KAERC,qBAAWH,EAAQC,KAAMH,GAW/B,GAFAM,QAAQC,IAAIL,GAERA,EAAQM,UAAYN,EAAQM,SAASC,OAAS,EAChD,OACEJ,qBAAWH,EAAQM,SAAUR,GAG/B,GAAIE,EAAQQ,KAAM,CAGhB,IACMC,EADQT,EAAQQ,KAAKE,MAAM,KACVC,IAAI,SAACC,GAAD,OACzBC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACtB,EAAD,KAA8BmB,GAC9BC,EAAAC,EAAAC,cAACnB,EAAD,gBAKJ,OADAQ,QAAQC,IAAII,GAEVI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACGP,MAQEQ,EAxDU,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAM1B,OACEN,EAAAC,EAAAC,cAAC1B,EAAD,KACG+B,IAAUD,EAAMrB,mGCdvB,IAIeuB,EAJO/B,IAAOC,IAAV+B,WCsCJC,MAjCF,WACX,IAAMC,EAmBR,WAA0B,IAAAC,EACcC,mBAAS,IADvBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjBD,EADiBG,EAAA,GACJG,EADIH,EAAA,GAOxB,MAAO,CACLI,MAAOP,EACPQ,SANF,SAA4BC,GAC1BH,EAAeG,EAAEC,OAAOH,SAvBNI,GACdC,EAAkBC,iBAAO,MAE/B,OACExB,EAAAC,EAAAC,cAACuB,EAAD,KACEzB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CACE0B,SAAUJ,EACVjB,KAAMK,EAAYO,MAClBC,SAAUR,EAAYQ,SACtBS,UAAU,kBACVC,WAAW,UAEb7B,EAAAC,EAAAC,cAAC4B,EAAD,CACExB,KAAMK,EAAYO,0HCnB1B,IAKea,EALDtD,IAAOuD,GAAVC,6OCAX,IAUeC,EAVMzD,IAAOC,IAAVyD,IAEI,SAAAC,GAAK,OAAIA,EAAMC,MAAM/D,UCc5BgE,MAXf,WACE,OACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAeF,MAAOA,GACpBrC,EAAAC,EAAAC,cAACsC,EAAD,KACExC,EAAAC,EAAAC,cAACuC,EAAD,uBACAzC,EAAAC,EAAAC,cAACwC,EAAD,SCPRC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.155d0c4d.chunk.js","sourcesContent":["export default {\n  primary: 'papayawhip',\n  secondary: '#6197E8'\n}\n","import styled from 'styled-components'\n\nconst InteractionLayerContainer = styled.div`\n  bottom: 0;\n  left: 0;\n  padding: 25px;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n  top: 0;\n`\n\nconst InteractionLayerWordWrapper = styled.span`\n  color: transparent;\n  cursor: pointer;\n  pointer-events: all;\n\n  &:hover {\n    background: red;\n    border-radius: 20px;\n    color: #000;\n    padding: 2px;\n  }\n`\n\nconst InteractionLayerSpace = styled.span`\n  padding-right: .2px;\n`\n\nexport {\n  InteractionLayerContainer,\n  InteractionLayerWordWrapper,\n  InteractionLayerSpace\n}","import React from 'react'\nimport {\n  InteractionLayerContainer,\n  InteractionLayerWordWrapper,\n  InteractionLayerSpace\n} from './InteractionLayer.css';\nimport parseHtml, { domToReact } from 'html-react-parser'\n\nconst InteractionLayer = ({ html }) => {\n  // TODO: Only show the red dudes while holding control\n  // TODO: handle click\n  // open function menu\n  // function 1: bloop\n  // split text from pass text to parent..\n  return (\n    <InteractionLayerContainer>\n      {parseHtml(html, parserOptions)}\n    </InteractionLayerContainer>\n  )\n}\n\nconst parserOptions = {\n  replace: (domNode) => {\n    if (domNode.next) {\n      if (domNode.type === \"tag\") {\n        return (\n          domToReact(domNode.next, parserOptions)\n        )\n      } else {\n        return (\n          domToReact(domNode.next, parserOptions)\n        )\n      }\n    }\n\n    console.log(domNode)\n\n    if (domNode.children && domNode.children.length > 0) {\n      return (\n        domToReact(domNode.children, parserOptions)\n      )\n    } else {\n      if (domNode.data) {\n        // console.log(domNode.data)\n        // \n        const words = domNode.data.split(\" \")\n        const mapWords = words.map((word) => (\n          <>\n            <InteractionLayerWordWrapper>{word}</InteractionLayerWordWrapper>\n            <InteractionLayerSpace>&nbsp;</InteractionLayerSpace>\n          </>\n        ))\n\n        console.log(mapWords)\n        return (\n          <>\n            {mapWords}\n          </>\n        )\n      }\n    }\n  }\n}\n\nexport default InteractionLayer\n","import styled from 'styled-components'\n\nconst PageContainer = styled.div`\n  position: relative;\n`\n\nexport default PageContainer\n","import React, { useState, useRef } from 'react'\nimport ContentEditable from 'react-contenteditable'\nimport InteractionLayer from 'components/InteractionLayer'\nimport PageContainer from './Page.css'\nimport parseHtml from 'html-react-parser'\nimport './ContentEditableStyle.css'\n\nconst Page = () => {\n  const editorValue = useEditorValue()\n  const contentEditable = useRef(null)\n\n  return (\n    <PageContainer>\n      <ContentEditable\n        innerRef={contentEditable}\n        html={editorValue.value}\n        onChange={editorValue.onChange}\n        className=\"ContentEditable\"\n        spellcheck=\"false\"\n      />\n      <InteractionLayer\n        html={editorValue.value}\n      />\n    </PageContainer>\n  )\n}\n\nfunction useEditorValue() {\n  const [editorValue, setEditorValue] = useState('')\n\n  function handleChangeEditor(e) {\n    setEditorValue(e.target.value)\n  }\n\n  return {\n    value: editorValue,\n    onChange: handleChangeEditor\n  }\n}\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Title = styled.h1`\n  margin-bottom: 24px;\n  width: 600px;\n`\n\nexport default Title","import styled from 'styled-components'\n\nconst AppContainer = styled.div`\n  align-items: center;\n  background-color: ${props => props.theme.primary};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 100vh;\n  width: 100%;\n`\n\nexport default AppContainer\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport theme from 'themes/default'\nimport Page from 'components/Page'\nimport Title from 'components/Title/Title.css'\nimport AppContainer from './App.css'\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <AppContainer>\n        <Title>Start typing..</Title>\n        <Page />\n      </AppContainer>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root')) // eslint-disable-line \n"],"sourceRoot":""}